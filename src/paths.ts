export const paths = {
  home: '/',
  checkout: '/checkout',
  contact: '/contact',
  pricing: '/pricing',
  auth: {
    custom: {
      signIn: '/auth/custom/sign-in',
      signUp: '/auth/custom/sign-up',
      resetPassword: '/auth/custom/reset-password',
    },
    auth0: {
      callback: '/auth/auth0/callback',
      signIn: '/auth/auth0/sign-in',
      signUp: '/auth/auth0/sign-up',
      signOut: '/auth/auth0/sign-out',
      profile: '/auth/auth0/profile',
    },
    cognito: {
      signIn: '/auth/cognito/sign-in',
      signUp: '/auth/cognito/sign-up',
      signUpConfirm: '/auth/cognito/sign-up-confirm',
      newPasswordRequired: '/auth/cognito/new-password-required',
      resetPassword: '/auth/cognito/reset-password',
      updatePassword: '/auth/cognito/update-password',
    },
    firebase: {
      signIn: '/auth/firebase/sign-in',
      signUp: '/auth/firebase/sign-up',
      resetPassword: '/auth/firebase/reset-password',
      recoveryLinkSent: '/auth/firebase/recovery-link-sent',
      updatePassword: '/auth/firebase/update-password',
    },
    supabase: {
      callback: { implicit: '/auth/supabase/callback/implicit', pkce: '/auth/supabase/callback/pkce' },
      signIn: '/auth/supabase/sign-in',
      signUp: '/auth/supabase/sign-up',
      signUpConfirm: '/auth/supabase/sign-up-confirm',
      resetPassword: '/auth/supabase/reset-password',
      recoveryLinkSent: '/auth/supabase/recovery-link-sent',
      updatePassword: '/auth/supabase/update-password',
    },
    samples: {
      signIn: { centered: '/auth/samples/sign-in/centered', split: '/auth/samples/sign-in/split' },
      signUp: { centered: '/auth/samples/sign-up/centered', split: '/auth/samples/sign-up/split' },
      updatePassword: {
        centered: '/auth/samples/update-password/centered',
        split: '/auth/samples/update-password/split',
      },
      resetPassword: { centered: '/auth/samples/reset-password/centered', split: '/auth/samples/reset-password/split' },
      verifyCode: { centered: '/auth/samples/verify-code/centered', split: '/auth/samples/verify-code/split' },
    },
  },
  dashboard: {
    overview: '/dashboard',
    settings: {
      account: '/settings/account',
      billing: '/settings/billing',
      integrations: '/settings/integrations',
      notifications: '/settings/notifications',
      security: '/settings/security',
      team: '/settings/team',
    },
    academy: { browse: '/academy', details: (courseId: string) => `/academy/courses/${courseId}` },
    analytics: '/analytics',
    blank: '/blank',
    blog: {
      list: '/blog',
      details: (postId: string) => `/blog/${postId}`,
      create: '/blog/create',
    },
    calendar: '/calendar',
    chat: {
      base: '/chat',
      compose: '/chat/compose',
      thread: (threadType: string, threadId: string) => `/chat/${threadType}/${threadId}`,
    },
    crypto: '/crypto',
    customers: {
      list: '/clientes',
      create: '/clientes/criar',
      details: (customerId: string) => `/clientes/${customerId}`,
      edit: (customerId: string) => `/clientes/${customerId}/editar`,
    },
    eCommerce: '/e-commerce',
    fileStorage: '/file-storage',
    invoices: {
      list: '/invoices',
      create: '/invoices/create',
      details: (invoiceId: string) => `/invoices/${invoiceId}`,
    },
    jobs: {
      browse: '/jobs',
      create: '/jobs/create',
      companies: {
        overview: (companyId: string) => `/jobs/companies/${companyId}`,
        reviews: (companyId: string) => `/jobs/companies/${companyId}/reviews`,
        activity: (companyId: string) => `/jobs/companies/${companyId}/activity`,
        team: (companyId: string) => `/jobs/companies/${companyId}/team`,
        assets: (companyId: string) => `/jobs/companies/${companyId}/assets`,
      },
    },
    logistics: { metrics: '/logistics', fleet: '/logistics/fleet' },
    mail: {
      list: (label: string) => `/mail/${label}`,
      details: (label: string, emailId: string) => `/mail/${label}/${emailId}`,
    },
    orders: {
      list: '/orders',
      create: '/orders/create',
      preview: (orderId: string) => `/orders?previewId=${orderId}`,
      details: (orderId: string) => `/orders/${orderId}`,
    },
    products: {
      list: '/products',
      create: '/products/create',
      preview: (productId: string) => `/products?previewId=${productId}`,
      details: (productId: string) => `/products/${productId}`,
    },
    social: {
      profile: { timeline: '/social/profile', connections: '/social/profile/connections' },
      feed: '/social/feed',
    },
    tasks: '/tasks',
  },
  pdf: { invoice: (invoiceId: string) => `/pdf/invoices/${invoiceId}` },
  components: {
    index: '/components',
    buttons: '/components/buttons',
    charts: '/components/charts',
    colors: '/components/colors',
    detailLists: '/components/detail-lists',
    forms: '/components/forms',
    gridLists: '/components/grid-lists',
    groupedLists: '/components/grouped-lists',
    inputs: '/components/inputs',
    modals: '/components/modals',
    quickStats: '/components/quick-stats',
    tables: '/components/tables',
    typography: '/components/typography',
  },
  notAuthorized: '/errors/not-authorized',
  notFound: '/errors/not-found',
  internalServerError: '/errors/internal-server-error',
  docs: 'https://material-kit-pro-react-docs.devias.io',
  purchase: 'https://mui.com/store/items/devias-kit-pro',
} as const;
